open HolKernel Parse boolLib bossLib helper_tactics;
open operationsTheory;
open access_propertiesTheory;

val _ = new_theory "writing_back_bd_properties_lemmas";

Theorem WRITING_BACK_BD_REMOVE_RELEASED_BDS_IMPLIES_PENDING_ACCESSES_UNMODIFIED_WRITING_BACK_BD_LEMMA:
!channel1 channel2 released_bd_ras_wass.
  channel2 = writing_back_bd_remove_released_bds channel1 released_bd_ras_wass
  ==>
  PENDING_ACCESSES_UNMODIFIED_WRITING_BACK_BD channel1 channel2
Proof
INTRO_TAC THEN
ITAC writing_back_bd_suboperations_lemmasTheory.WRITING_BACK_BD_REMOVE_RELEASED_BDS_PRESERVES_REQUESTS_LEMMA THEN
ETAC PENDING_ACCESSES_UNMODIFIED_WRITING_BACK_BD THEN
STAC
QED

Theorem WRITING_BACK_BD_APPEND_REQUEST_IMPLIES_PENDING_ACCESSES_CONDITIONALLY_EXPANDED_WRITING_BACK_BD_LEMMA:
!W memory channel1 channel2 address_bytes tag.
  channel2 = writing_back_bd_append_request channel1 address_bytes tag /\
  EVERY (W memory) (MAP FST address_bytes)
  ==>
  !R. PENDING_ACCESSES_CONDITIONALLY_EXPANDED_WRITING_BACK_BD R W memory channel1 channel2
Proof
INTRO_TAC THEN
GEN_TAC THEN
PTAC PENDING_ACCESSES_CONDITIONALLY_EXPANDED_WRITING_BACK_BD THEN
INTRO_TAC THEN
ITAC writing_back_bd_suboperations_lemmasTheory.WRITING_BACK_BD_APPEND_REQUEST_APPEND_REQUEST_LEMMA THEN
SPLIT_ASM_DISJS_TAC THENL
[
 STAC
 ,
 MATCH_MP_TAC boolTheory.OR_INTRO_THM2 THEN
 LRTAC THEN
 REWRITE_TAC [REQUEST_CONDITION_R_W, REQUEST_CONDITION_R, REQUEST_CONDITION_W] THEN
 STAC
]
QED

Theorem WRITING_BACK_BD_REMOVE_RELEASED_BDS_APPEND_REQUEST_IMPLIES_PENDING_ACCECSSES_CONDITIONALLY_EXPANDED_WRITING_BACK_BD_LEMMA:
!W memory channel1 channel channel2 released_bd_ras_wass address_bytes tag.
  channel = writing_back_bd_remove_released_bds channel1 released_bd_ras_wass /\
  channel2 = writing_back_bd_append_request channel address_bytes tag /\
  EVERY (W memory) (MAP FST address_bytes)
  ==>
  !R. PENDING_ACCESSES_CONDITIONALLY_EXPANDED_WRITING_BACK_BD R W memory channel1 channel2
Proof
INTRO_TAC THEN
GEN_TAC THEN
ITAC WRITING_BACK_BD_REMOVE_RELEASED_BDS_IMPLIES_PENDING_ACCESSES_UNMODIFIED_WRITING_BACK_BD_LEMMA THEN
ITAC WRITING_BACK_BD_APPEND_REQUEST_IMPLIES_PENDING_ACCESSES_CONDITIONALLY_EXPANDED_WRITING_BACK_BD_LEMMA THEN
ETAC PENDING_ACCESSES_CONDITIONALLY_EXPANDED_WRITING_BACK_BD THEN
INTRO_TAC THEN
RW_HYPS_TAC PENDING_ACCESSES_CONDITIONALLY_EXPANDED_WRITING_BACK_BD THEN
AITAC THEN
ITAC writing_back_bd_suboperations_lemmasTheory.WRITING_BACK_BD_REMOVE_RELEASED_BDS_PRESERVES_REQUESTS_LEMMA THEN
LRTAC THEN
STAC
QED

val _ = export_theory();

